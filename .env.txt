# ============================================================================
# ENVIRONMENT VARIABLES FOR PRODUCTION
# ============================================================================

# Create a .env file or set these environment variables:
"""
# Production optimizations
STREAMLIT_DEBUG=false
STREAMLIT_PRODUCTION=true
AGILEEE_CACHE_MODELS=true
AGILEEE_CACHE_FEATURES=true

# Debug control
DEBUG=false
PYCARET_LOGGING=false
"""

# ============================================================================
# 6. MEMORY MANAGEMENT IMPROVEMENTS
# ============================================================================

def cleanup_session_state():
    """Clean up large objects from session state"""
    # Limit prediction history
    if 'prediction_history' in st.session_state:
        max_history = 50
        if len(st.session_state.prediction_history) > max_history:
            st.session_state.prediction_history = st.session_state.prediction_history[-max_history:]
    
    # Clear old SHAP values
    if 'current_shap_values' in st.session_state:
        # Keep only recent SHAP values
        pass

def optimize_dataframes():
    """Optimize DataFrame memory usage"""
    def optimize_df(df):
        if df is not None and not df.empty:
            # Convert to most efficient dtypes
            for col in df.select_dtypes(include=['float64']).columns:
                df[col] = df[col].astype('float32')
            for col in df.select_dtypes(include=['int64']).columns:
                df[col] = df[col].astype('int32')
        return df
